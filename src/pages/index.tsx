import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();
  // const { mutate } = api.posts.create.useMutation();
  if (!user) return null;
  return (
    <div className="m-3 flex  gap-3">
      <img
        className="h-14 w-14 rounded-full"
        src={user.profileImageUrl}
        alt="Profile Image"
      />
      <input
        className="grow bg-transparent outline-none"
        placeholder="Create your tweet"
      ></input>
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  const { post, author } = props;
  return (
    <div className="flex flex-col">
      {data?.map(({ post, author }) => (
        <div className="p8 border-y border-slate-400" key={post.id}>
          <img></img>
          {post.content}
        </div>
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();
  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className=" w-full border-x border-slate-400 md:max-w-2xl">
          {!user.isSignedIn && (
            <div className="flex justify-center">
              <SignIn
                appearance={{
                  layout: {
                    socialButtonsVariant: "iconButton",
                    socialButtonsPlacement: "bottom",
                  },
                }}
              />
            </div>
          )}
          {/* {!!user.isSignedIn && <SignOutButton />} */}
          {!!user.isSignedIn && <CreatePostWizard />}

          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.author} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
